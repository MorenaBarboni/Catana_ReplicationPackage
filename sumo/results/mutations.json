{
	"BridgeMintableTokenV2.sol": [
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__Context_init",
			"start": 9720,
			"end": 9767,
			"startLine": 243,
			"endLine": 243,
			"original": "function __Context_init() internal initializer ",
			"replace": "function __Context_init() internal  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m9e30a4a2",
			"diff": " 241 |  */\n 242 | abstract contract ContextUpgradeable is Initializable {\n 243 | ---    function __Context_init() internal initializer {\n     | +++    function __Context_init() internal  {\n 244 |         __Context_init_unchained();\n 245 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionCallWithValue",
			"start": 4382,
			"end": 4477,
			"startLine": 108,
			"endLine": 108,
			"original": "return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");",
			"replace": "functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");",
			"operator": "RSD",
			"status": null,
			"testingTime": null,
			"id": "m704350ba",
			"diff": " 106 |      */\n 107 |     function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n 108 | ---        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n     | +++        functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n 109 |     }\n 110 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__Context_init_unchained",
			"start": 9816,
			"end": 9873,
			"startLine": 247,
			"endLine": 247,
			"original": "function __Context_init_unchained() internal initializer ",
			"replace": "function __Context_init_unchained() internal  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m2948ff89",
			"diff": " 245 |     }\n 246 | \n 247 | ---    function __Context_init_unchained() internal initializer {\n     | +++    function __Context_init_unchained() internal  {\n 248 |     }\n 249 |     function _msgSender() internal view virtual returns (address payable) {\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryMul",
			"start": 20085,
			"end": 20086,
			"startLine": 570,
			"endLine": 570,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m87e3ef72",
			"diff": " 568 |         if (a == 0) return (true, 0);\n 569 |         uint256 c = a * b;\n 570 | ---        if (c / a != b) return (false, 0);\n     | +++        if (c / a != b) return (false, 1);\n 571 |         return (true, c);\n 572 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "stateVariable",
			"start": 36550,
			"end": 36552,
			"startLine": 1046,
			"endLine": 1046,
			"original": "44",
			"replace": "43",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m3e5bec14",
			"diff": "1044 |      */\n1045 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n1046 | ---    uint256[44] private __gap;\n     | +++    uint256[43] private __gap;\n1047 | }\n1048 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "div",
			"start": 22583,
			"end": 22584,
			"startLine": 655,
			"endLine": 655,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "mddaa240a",
			"diff": " 653 |      */\n 654 |     function div(uint256 a, uint256 b) internal pure returns (uint256) {\n 655 | ---        require(b > 0, \"SafeMath: division by zero\");\n     | +++        require(b > 1, \"SafeMath: division by zero\");\n 656 |         return a / b;\n 657 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "add",
			"start": 21071,
			"end": 21118,
			"startLine": 606,
			"endLine": 606,
			"original": "require(c >= a, \"SafeMath: addition overflow\");",
			"replace": "/* require(c >= a, \"SafeMath: addition overflow\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m35eda5fe",
			"diff": " 604 |     function add(uint256 a, uint256 b) internal pure returns (uint256) {\n 605 |         uint256 c = a + b;\n 606 | ---        require(c >= a, \"SafeMath: addition overflow\");\n     | +++        /* require(c >= a, \"SafeMath: addition overflow\"); */\n 607 |         return c;\n 608 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__ERC20_init_unchained",
			"start": 27669,
			"end": 27766,
			"startLine": 795,
			"endLine": 795,
			"original": "function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer ",
			"replace": "function __ERC20_init_unchained(string memory name_, string memory symbol_) internal  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m046f2125",
			"diff": " 793 |     }\n 794 | \n 795 | ---    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer {\n     | +++    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal  {\n 796 |         _name = name_;\n 797 |         _symbol = symbol_;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "setSideBridgeContract",
			"start": 41421,
			"end": 41509,
			"startLine": 1211,
			"endLine": 1211,
			"original": "function setSideBridgeContract(address _chainportBridge) external onlyChainportCongress ",
			"replace": "function setSideBridgeContract(address _chainportBridge) external  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "mc65e4546",
			"diff": "1209 |      * @param   _chainportBridge is new proxy address\n1210 |      */\n1211 | ---    function setSideBridgeContract(address _chainportBridge) external onlyChainportCongress {\n     | +++    function setSideBridgeContract(address _chainportBridge) external  {\n1212 |         require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\");\n1213 |         chainportBridge = _chainportBridge;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryDiv",
			"start": 20382,
			"end": 20383,
			"startLine": 580,
			"endLine": 580,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m6171f77e",
			"diff": " 578 |      */\n 579 |     function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 580 | ---        if (b == 0) return (false, 0);\n     | +++        if (b == 0) return (false, 1);\n 581 |         return (true, a / b);\n 582 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "setSideBridgeContract",
			"start": 41519,
			"end": 41602,
			"startLine": 1212,
			"endLine": 1212,
			"original": "require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\");",
			"replace": "/* require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "mb97ed9fb",
			"diff": "1210 |      */\n1211 |     function setSideBridgeContract(address _chainportBridge) external onlyChainportCongress {\n1212 | ---        require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\");\n     | +++        /* require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\"); */\n1213 |         chainportBridge = _chainportBridge;\n1214 |         emit ChainportBridgeChanged(chainportBridge);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "div",
			"start": 24643,
			"end": 24646,
			"startLine": 710,
			"endLine": 710,
			"original": " > ",
			"replace": " >=  ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m260c1849",
			"diff": " 708 |      */\n 709 |     function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 710 | ---        require(b > 0, errorMessage);\n     | +++        require(b >=  0, errorMessage);\n 711 |         return a / b;\n 712 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "div",
			"start": 24634,
			"end": 24663,
			"startLine": 710,
			"endLine": 710,
			"original": "require(b > 0, errorMessage);",
			"replace": "/* require(b > 0, errorMessage); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m415da028",
			"diff": " 708 |      */\n 709 |     function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 710 | ---        require(b > 0, errorMessage);\n     | +++        /* require(b > 0, errorMessage); */\n 711 |         return a / b;\n 712 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_transfer",
			"start": 32872,
			"end": 32943,
			"startLine": 949,
			"endLine": 949,
			"original": "require(sender != address(0), \"ERC20: transfer from the zero address\");",
			"replace": "/* require(sender != address(0), \"ERC20: transfer from the zero address\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m7d127056",
			"diff": " 947 |      */\n 948 |     function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n 949 | ---        require(sender != address(0), \"ERC20: transfer from the zero address\");\n     | +++        /* require(sender != address(0), \"ERC20: transfer from the zero address\"); */\n 950 |         require(recipient != address(0), \"ERC20: transfer to the zero address\");\n 951 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "isContract",
			"start": 1251,
			"end": 1254,
			"startLine": 37,
			"endLine": 37,
			"original": " > ",
			"replace": " >=  ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m16d3d782",
			"diff": "  35 |         // solhint-disable-next-line no-inline-assembly\n  36 |         assembly { size := extcodesize(account) }\n  37 | ---        return size > 0;\n     | +++        return size >=  0;\n  38 |     }\n  39 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "stateVariable",
			"start": 36550,
			"end": 36552,
			"startLine": 1046,
			"endLine": 1046,
			"original": "44",
			"replace": "45",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m94568731",
			"diff": "1044 |      */\n1045 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n1046 | ---    uint256[44] private __gap;\n     | +++    uint256[45] private __gap;\n1047 | }\n1048 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "unpause",
			"start": 40455,
			"end": 40505,
			"startLine": 1182,
			"endLine": 1182,
			"original": "function unpause() external onlyChainportCongress ",
			"replace": "function unpause() external  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m4886b41a",
			"diff": "1180 |      * @notice  Function to unpause token contract\n1181 |      */\n1182 | ---    function unpause() external onlyChainportCongress {\n     | +++    function unpause() external  {\n1183 |         _unpause();\n1184 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "add",
			"start": 21080,
			"end": 21084,
			"startLine": 606,
			"endLine": 606,
			"original": " >= ",
			"replace": "  > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m7e04c73b",
			"diff": " 604 |     function add(uint256 a, uint256 b) internal pure returns (uint256) {\n 605 |         uint256 c = a + b;\n 606 | ---        require(c >= a, \"SafeMath: addition overflow\");\n     | +++        require(c  > a, \"SafeMath: addition overflow\");\n 607 |         return c;\n 608 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sendValue",
			"start": 2289,
			"end": 2293,
			"startLine": 57,
			"endLine": 57,
			"original": " >= ",
			"replace": "  > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m42ede1d8",
			"diff": "  55 |      */\n  56 |     function sendValue(address payable recipient, uint256 amount) internal {\n  57 | ---        require(address(this).balance >= amount, \"Address: insufficient balance\");\n     | +++        require(address(this).balance  > amount, \"Address: insufficient balance\");\n  58 | \n  59 |         // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mint",
			"start": 38767,
			"end": 38787,
			"startLine": 1121,
			"endLine": 1121,
			"original": "_mint(_to, _amount);",
			"replace": "/*_mint(_to, _amount);*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m8c0f818d",
			"diff": "1119 |      */\n1120 |     function mint(address _to, uint256 _amount) public whenNotPaused onlyClassifiedAuthority {\n1121 | ---        _mint(_to, _amount);\n     | +++        /*_mint(_to, _amount);*/\n1122 |         emit Mint(_to, _amount);\n1123 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryAdd",
			"start": 19184,
			"end": 19187,
			"startLine": 545,
			"endLine": 545,
			"original": " < ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m85cbdb3c",
			"diff": " 543 |     function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 544 |         uint256 c = a + b;\n 545 | ---        if (c < a) return (false, 0);\n     | +++        if (c != a) return (false, 0);\n 546 |         return (true, c);\n 547 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryMod",
			"start": 20675,
			"end": 20676,
			"startLine": 590,
			"endLine": 590,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m30c0ad27",
			"diff": " 588 |      */\n 589 |     function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 590 | ---        if (b == 0) return (false, 0);\n     | +++        if (b == 1) return (false, 0);\n 591 |         return (true, a % b);\n 592 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transferFrom",
			"start": 14866,
			"end": 14963,
			"startLine": 421,
			"endLine": 421,
			"original": "function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m9445d95a",
			"diff": " 419 |      * Emits a {Transfer} event.\n 420 |      */\n 421 | ---    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n     | +++    \n 422 | \n 423 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_beforeTokenTransfer",
			"start": 39982,
			"end": 39984,
			"startLine": 1163,
			"endLine": 1163,
			"original": "to",
			"replace": "from",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m82cd32e3",
			"diff": "1161 |      */\n1162 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal override {\n1163 | ---        super._beforeTokenTransfer(from, to, amount);\n     | +++        super._beforeTokenTransfer(from, from, amount);\n1164 | \n1165 |         // Exclude chainportCongress'\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transferFrom",
			"start": 17637,
			"end": 17734,
			"startLine": 501,
			"endLine": 501,
			"original": "function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "md767dde8",
			"diff": " 499 |      * Emits a {Transfer} event.\n 500 |      */\n 501 | ---    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n     | +++    \n 502 | \n 503 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 21413,
			"end": 21568,
			"startLine": 620,
			"endLine": 623,
			"original": "function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "mdccfb04b",
			"diff": " 618 |      * - Subtraction cannot overflow.\n 619 |      */\n 620 | ---    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n     | +++    \n 621 | \n 622 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_verifyCallResult",
			"start": 6538,
			"end": 6539,
			"startLine": 155,
			"endLine": 155,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "ma38499c5",
			"diff": " 153 |         } else {\n 154 |             // Look for revert reason and bubble it up if present\n 155 | ---            if (returndata.length > 0) {\n     | +++            if (returndata.length > 1) {\n 156 |                 // The easiest way to bubble the revert reason is using memory via assembly\n 157 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "add",
			"start": 21057,
			"end": 21060,
			"startLine": 605,
			"endLine": 605,
			"original": " + ",
			"replace": " * ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m1d9c5ea0",
			"diff": " 603 |      */\n 604 |     function add(uint256 a, uint256 b) internal pure returns (uint256) {\n 605 | ---        uint256 c = a + b;\n     | +++        uint256 c = a * b;\n 606 |         require(c >= a, \"SafeMath: addition overflow\");\n 607 |         return c;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transfer",
			"start": 29573,
			"end": 29616,
			"startLine": 856,
			"endLine": 856,
			"original": "_transfer(_msgSender(), recipient, amount);",
			"replace": "/*_transfer(_msgSender(), recipient, amount);*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "ma343bde4",
			"diff": " 854 |      */\n 855 |     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n 856 | ---        _transfer(_msgSender(), recipient, amount);\n     | +++        /*_transfer(_msgSender(), recipient, amount);*/\n 857 |         return true;\n 858 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "burnFrom",
			"start": 39419,
			"end": 39503,
			"startLine": 1146,
			"endLine": 1146,
			"original": "allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\")",
			"replace": "allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m19e68096",
			"diff": "1144 |      */\n1145 |     function burnFrom(address account, uint256 amount) public {\n1146 | ---        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n     | +++        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") + 1;\n1147 | \n1148 |         _approve(account, _msgSender(), decreasedAllowance);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 23823,
			"end": 23827,
			"startLine": 690,
			"endLine": 690,
			"original": " <= ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m8a895d2e",
			"diff": " 688 |      */\n 689 |     function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 690 | ---        require(b <= a, errorMessage);\n     | +++        require(b == a, errorMessage);\n 691 |         return a - b;\n 692 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionCall",
			"start": 3838,
			"end": 3890,
			"startLine": 93,
			"endLine": 93,
			"original": "functionCallWithValue(target, data, 0, errorMessage)",
			"replace": "functionCallWithValue(target, data, value, \"Address: low-level call with value failed\")",
			"operator": "ACM",
			"status": null,
			"testingTime": null,
			"id": "m0ffb5eaa",
			"diff": "  91 |      */\n  92 |     function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n  93 | ---        return functionCallWithValue(target, data, 0, errorMessage);\n     | +++        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n  94 |     }\n  95 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mul",
			"start": 21935,
			"end": 21938,
			"startLine": 637,
			"endLine": 637,
			"original": " * ",
			"replace": " ** ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m590ab9c9",
			"diff": " 635 |     function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n 636 |         if (a == 0) return 0;\n 637 | ---        uint256 c = a * b;\n     | +++        uint256 c = a ** b;\n 638 |         require(c / a == b, \"SafeMath: multiplication overflow\");\n 639 |         return c;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transferFrom",
			"start": 30621,
			"end": 30938,
			"startLine": 892,
			"endLine": 896,
			"original": "function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "m3a19c60f",
			"diff": " 890 |      * `amount`.\n 891 |      */\n 892 | ---    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n     | +++    \n 893 | \n 894 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryAdd",
			"start": 19184,
			"end": 19187,
			"startLine": 545,
			"endLine": 545,
			"original": " < ",
			"replace": " > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mcd30a566",
			"diff": " 543 |     function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 544 |         uint256 c = a + b;\n 545 | ---        if (c < a) return (false, 0);\n     | +++        if (c > a) return (false, 0);\n 546 |         return (true, c);\n 547 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_msgData",
			"start": 10203,
			"end": 10219,
			"startLine": 255,
			"endLine": 255,
			"original": "return msg.data;",
			"replace": "/* return msg.data; */",
			"operator": "RSD",
			"status": null,
			"testingTime": null,
			"id": "m206331de",
			"diff": " 253 |     function _msgData() internal view virtual returns (bytes memory) {\n 254 |         this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n 255 | ---        return msg.data;\n     | +++        /* return msg.data; */\n 256 |     }\n 257 |     uint256[50] private __gap;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryMul",
			"start": 20063,
			"end": 20067,
			"startLine": 570,
			"endLine": 570,
			"original": " != ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "me7c0f3d3",
			"diff": " 568 |         if (a == 0) return (true, 0);\n 569 |         uint256 c = a * b;\n 570 | ---        if (c / a != b) return (false, 0);\n     | +++        if (c / a >= b) return (false, 0);\n 571 |         return (true, c);\n 572 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "setChainportCongress",
			"start": 42065,
			"end": 42083,
			"startLine": 1224,
			"endLine": 1224,
			"original": "_chainportCongress",
			"replace": "chainportCongress",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mc81537da",
			"diff": "1222 |     function setChainportCongress(address _chainportCongress) external onlyChainportCongress {\n1223 |         require(_chainportCongress != address(0), \"BridgeMintableToken: Address malformed.\");\n1224 | ---        chainportCongress = _chainportCongress;\n     | +++        chainportCongress = chainportCongress;\n1225 |         emit ChainportCongressChanged(chainportCongress);\n1226 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionStaticCall",
			"start": 5541,
			"end": 5622,
			"startLine": 133,
			"endLine": 133,
			"original": "return functionStaticCall(target, data, \"Address: low-level static call failed\");",
			"replace": "functionStaticCall(target, data, \"Address: low-level static call failed\");",
			"operator": "RSD",
			"status": null,
			"testingTime": null,
			"id": "m598a253e",
			"diff": " 131 |      */\n 132 |     function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n 133 | ---        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n     | +++        functionStaticCall(target, data, \"Address: low-level static call failed\");\n 134 |     }\n 135 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 25337,
			"end": 25499,
			"startLine": 729,
			"endLine": 732,
			"original": "function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m8d661753",
			"diff": " 727 |      * - The divisor cannot be zero.\n 728 |      */\n 729 | ---    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n     | +++    \n 730 | }\n 731 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 23183,
			"end": 23186,
			"startLine": 672,
			"endLine": 672,
			"original": " > ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "ma51fa60a",
			"diff": " 670 |      */\n 671 |     function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n 672 | ---        require(b > 0, \"SafeMath: modulo by zero\");\n     | +++        require(b != 0, \"SafeMath: modulo by zero\");\n 673 |         return a % b;\n 674 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "div",
			"start": 22633,
			"end": 22636,
			"startLine": 656,
			"endLine": 656,
			"original": " / ",
			"replace": " + ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m710d63ac",
			"diff": " 654 |     function div(uint256 a, uint256 b) internal pure returns (uint256) {\n 655 |         require(b > 0, \"SafeMath: division by zero\");\n 656 | ---        return a / b;\n     | +++        return a + b;\n 657 |     }\n 658 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 23183,
			"end": 23186,
			"startLine": 672,
			"endLine": 672,
			"original": " > ",
			"replace": " < ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m9f6d4c5b",
			"diff": " 670 |      */\n 671 |     function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n 672 | ---        require(b > 0, \"SafeMath: modulo by zero\");\n     | +++        require(b < 0, \"SafeMath: modulo by zero\");\n 673 |         return a % b;\n 674 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 21499,
			"end": 21503,
			"startLine": 621,
			"endLine": 621,
			"original": " <= ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mb833ed03",
			"diff": " 619 |      */\n 620 |     function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n 621 | ---        require(b <= a, \"SafeMath: subtraction overflow\");\n     | +++        require(b >= a, \"SafeMath: subtraction overflow\");\n 622 |         return a - b;\n 623 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_verifyCallResult",
			"start": 6535,
			"end": 6538,
			"startLine": 155,
			"endLine": 155,
			"original": " > ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m3f8b7e43",
			"diff": " 153 |         } else {\n 154 |             // Look for revert reason and bubble it up if present\n 155 | ---            if (returndata.length > 0) {\n     | +++            if (returndata.length != 0) {\n 156 |                 // The easiest way to bubble the revert reason is using memory via assembly\n 157 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_burn",
			"start": 34341,
			"end": 34409,
			"startLine": 990,
			"endLine": 990,
			"original": "require(account != address(0), \"ERC20: burn from the zero address\");",
			"replace": "/* require(account != address(0), \"ERC20: burn from the zero address\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m9fe55c7b",
			"diff": " 988 |      */\n 989 |     function _burn(address account, uint256 amount) internal virtual {\n 990 | ---        require(account != address(0), \"ERC20: burn from the zero address\");\n     | +++        /* require(account != address(0), \"ERC20: burn from the zero address\"); */\n 991 | \n 992 |         _beforeTokenTransfer(account, address(0), amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "add",
			"start": 21057,
			"end": 21060,
			"startLine": 605,
			"endLine": 605,
			"original": " + ",
			"replace": " - ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m65a76a99",
			"diff": " 603 |      */\n 604 |     function add(uint256 a, uint256 b) internal pure returns (uint256) {\n 605 | ---        uint256 c = a + b;\n     | +++        uint256 c = a - b;\n 606 |         require(c >= a, \"SafeMath: addition overflow\");\n 607 |         return c;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 21490,
			"end": 21540,
			"startLine": 621,
			"endLine": 621,
			"original": "require(b <= a, \"SafeMath: subtraction overflow\");",
			"replace": "/* require(b <= a, \"SafeMath: subtraction overflow\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "mbda97149",
			"diff": " 619 |      */\n 620 |     function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n 621 | ---        require(b <= a, \"SafeMath: subtraction overflow\");\n     | +++        /* require(b <= a, \"SafeMath: subtraction overflow\"); */\n 622 |         return a - b;\n 623 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "burn",
			"start": 38982,
			"end": 39010,
			"startLine": 1131,
			"endLine": 1131,
			"original": "_burn(_msgSender(), amount);",
			"replace": "/*_burn(_msgSender(), amount);*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m68d2bb6d",
			"diff": "1129 |      */\n1130 |     function burn(uint256 amount) public {\n1131 | ---        _burn(_msgSender(), amount);\n     | +++        /*_burn(_msgSender(), amount);*/\n1132 |     }\n1133 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__ERC20_init_unchained",
			"start": 27838,
			"end": 27840,
			"startLine": 798,
			"endLine": 798,
			"original": "18",
			"replace": "17",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "md2987dee",
			"diff": " 796 |         _name = name_;\n 797 |         _symbol = symbol_;\n 798 | ---        _decimals = 18;\n     | +++        _decimals = 17;\n 799 |     }\n 800 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_beforeTokenTransfer",
			"start": 36445,
			"end": 36537,
			"startLine": 1045,
			"endLine": 1045,
			"original": "function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m7765f94a",
			"diff": "1043 |      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n1044 |      */\n1045 | ---    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n     | +++    \n1046 |     uint256[44] private __gap;\n1047 | }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "burnFrom",
			"start": 39419,
			"end": 39503,
			"startLine": 1146,
			"endLine": 1146,
			"original": "allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\")",
			"replace": "allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m56e94a1e",
			"diff": "1144 |      */\n1145 |     function burnFrom(address account, uint256 amount) public {\n1146 | ---        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n     | +++        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") - 1;\n1147 | \n1148 |         _approve(account, _msgSender(), decreasedAllowance);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_approve",
			"start": 35192,
			"end": 35261,
			"startLine": 1013,
			"endLine": 1013,
			"original": "require(owner != address(0), \"ERC20: approve from the zero address\");",
			"replace": "/* require(owner != address(0), \"ERC20: approve from the zero address\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m205e954f",
			"diff": "1011 |      */\n1012 |     function _approve(address owner, address spender, uint256 amount) internal virtual {\n1013 | ---        require(owner != address(0), \"ERC20: approve from the zero address\");\n     | +++        /* require(owner != address(0), \"ERC20: approve from the zero address\"); */\n1014 |         require(spender != address(0), \"ERC20: approve to the zero address\");\n1015 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mul",
			"start": 21958,
			"end": 21961,
			"startLine": 638,
			"endLine": 638,
			"original": " / ",
			"replace": " + ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m22372f0e",
			"diff": " 636 |         if (a == 0) return 0;\n 637 |         uint256 c = a * b;\n 638 | ---        require(c / a == b, \"SafeMath: multiplication overflow\");\n     | +++        require(c + a == b, \"SafeMath: multiplication overflow\");\n 639 |         return c;\n 640 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryMul",
			"start": 19994,
			"end": 19998,
			"startLine": 568,
			"endLine": 568,
			"original": " == ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mdfb20732",
			"diff": " 566 |         // benefit is lost if 'b' is also tested.\n 567 |         // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n 568 | ---        if (a == 0) return (true, 0);\n     | +++        if (a != 0) return (true, 0);\n 569 |         uint256 c = a * b;\n 570 |         if (c / a != b) return (false, 0);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryAdd",
			"start": 19184,
			"end": 19187,
			"startLine": 545,
			"endLine": 545,
			"original": " < ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m5b5db1d5",
			"diff": " 543 |     function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 544 |         uint256 c = a + b;\n 545 | ---        if (c < a) return (false, 0);\n     | +++        if (c <= a) return (false, 0);\n 546 |         return (true, c);\n 547 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 21557,
			"end": 21560,
			"startLine": 622,
			"endLine": 622,
			"original": " - ",
			"replace": " + ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m5c62cb79",
			"diff": " 620 |     function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n 621 |         require(b <= a, \"SafeMath: subtraction overflow\");\n 622 | ---        return a - b;\n     | +++        return a + b;\n 623 |     }\n 624 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryAdd",
			"start": 19165,
			"end": 19168,
			"startLine": 544,
			"endLine": 544,
			"original": " + ",
			"replace": " - ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mda134920",
			"diff": " 542 |      */\n 543 |     function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 544 | ---        uint256 c = a + b;\n     | +++        uint256 c = a - b;\n 545 |         if (c < a) return (false, 0);\n 546 |         return (true, c);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mul",
			"start": 21962,
			"end": 21966,
			"startLine": 638,
			"endLine": 638,
			"original": " == ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m1dee10f7",
			"diff": " 636 |         if (a == 0) return 0;\n 637 |         uint256 c = a * b;\n 638 | ---        require(c / a == b, \"SafeMath: multiplication overflow\");\n     | +++        require(c / a <= b, \"SafeMath: multiplication overflow\");\n 639 |         return c;\n 640 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transfer",
			"start": 29632,
			"end": 29636,
			"startLine": 857,
			"endLine": 857,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m75c4998c",
			"diff": " 855 |     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n 856 |         _transfer(_msgSender(), recipient, amount);\n 857 | ---        return true;\n     | +++        return false;\n 858 |     }\n 859 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "initialize",
			"start": 37648,
			"end": 37666,
			"startLine": 1086,
			"endLine": 1086,
			"original": "__Pausable_init();",
			"replace": "/* __Pausable_init(); */",
			"operator": "ISD",
			"status": null,
			"testingTime": null,
			"id": "m326ddf41",
			"diff": "1084 |     {\n1085 |         __ERC20_init(tokenName_, tokenSymbol_);\n1086 | ---        __Pausable_init();\n     | +++        /* __Pausable_init(); */\n1087 |         _setupDecimals(decimals_);\n1088 |         chainportCongress = chainportCongress_;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "withdrawTokenIfStuck",
			"start": 42950,
			"end": 42955,
			"startLine": 1246,
			"endLine": 1246,
			"original": "token",
			"replace": "beneficiary",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m21be0fc4",
			"diff": "1244 |      */\n1245 |     function withdrawTokenIfStuck(address token, address beneficiary) external onlyChainportCongress {\n1246 | ---        uint256 amount = IERC20(token).balanceOf(address(this));\n     | +++        uint256 amount = IERC20(beneficiary).balanceOf(address(this));\n1247 |         IERC20(token).transfer(beneficiary, amount);\n1248 |         emit StuckTokenWithdrawn(token, beneficiary, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "onlyChainportCongress",
			"start": 38288,
			"end": 38438,
			"startLine": 1107,
			"endLine": 1110,
			"original": "require(\n            msg.sender == chainportCongress,\n            \"BridgeMintableToken: Function can be called only by Chainport Congress.\"\n        );",
			"replace": "/* require(\n            msg.sender == chainportCongress,\n            \"BridgeMintableToken: Function can be called only by Chainport Congress.\"\n        ); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "mba0020cd",
			"diff": "1105 |      */\n1106 |     modifier onlyChainportCongress() {\n1107 | ---        require(\n     | +++        /* require(\n1108 |             msg.sender == chainportCongress,\n1109 |             \"BridgeMintableToken: Function can be called only by Chainport Congress.\"\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "approve",
			"start": 14485,
			"end": 14559,
			"startLine": 410,
			"endLine": 410,
			"original": "function approve(address spender, uint256 amount) external returns (bool);",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m4814015b",
			"diff": " 408 |      * Emits an {Approval} event.\n 409 |      */\n 410 | ---    function approve(address spender, uint256 amount) external returns (bool);\n     | +++    \n 411 | \n 412 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_verifyCallResult",
			"start": 6535,
			"end": 6538,
			"startLine": 155,
			"endLine": 155,
			"original": " > ",
			"replace": " >=  ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mf9bcb862",
			"diff": " 153 |         } else {\n 154 |             // Look for revert reason and bubble it up if present\n 155 | ---            if (returndata.length > 0) {\n     | +++            if (returndata.length >=  0) {\n 156 |                 // The easiest way to bubble the revert reason is using memory via assembly\n 157 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_approve",
			"start": 35205,
			"end": 35209,
			"startLine": 1013,
			"endLine": 1013,
			"original": " != ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m06c19dd3",
			"diff": "1011 |      */\n1012 |     function _approve(address owner, address spender, uint256 amount) internal virtual {\n1013 | ---        require(owner != address(0), \"ERC20: approve from the zero address\");\n     | +++        require(owner >= address(0), \"ERC20: approve from the zero address\");\n1014 |         require(spender != address(0), \"ERC20: approve to the zero address\");\n1015 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 25451,
			"end": 25454,
			"startLine": 730,
			"endLine": 730,
			"original": " > ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m89260e58",
			"diff": " 728 |      */\n 729 |     function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 730 | ---        require(b > 0, errorMessage);\n     | +++        require(b != 0, errorMessage);\n 731 |         return a % b;\n 732 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_approve",
			"start": 35270,
			"end": 35339,
			"startLine": 1014,
			"endLine": 1014,
			"original": "require(spender != address(0), \"ERC20: approve to the zero address\");",
			"replace": "/* require(spender != address(0), \"ERC20: approve to the zero address\"); */",
			"operator": "EHD",
			"status": null,
			"testingTime": null,
			"id": "m133558e3",
			"diff": "1012 |     function _approve(address owner, address spender, uint256 amount) internal virtual {\n1013 |         require(owner != address(0), \"ERC20: approve from the zero address\");\n1014 | ---        require(spender != address(0), \"ERC20: approve to the zero address\");\n     | +++        /* require(spender != address(0), \"ERC20: approve to the zero address\"); */\n1015 | \n1016 |         _allowances[owner][spender] = amount;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_approve",
			"start": 35285,
			"end": 35289,
			"startLine": 1014,
			"endLine": 1014,
			"original": " != ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m438a5300",
			"diff": "1012 |     function _approve(address owner, address spender, uint256 amount) internal virtual {\n1013 |         require(owner != address(0), \"ERC20: approve from the zero address\");\n1014 | ---        require(spender != address(0), \"ERC20: approve to the zero address\");\n     | +++        require(spender == address(0), \"ERC20: approve to the zero address\");\n1015 | \n1016 |         _allowances[owner][spender] = amount;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 25454,
			"end": 25455,
			"startLine": 730,
			"endLine": 730,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m68f38d8d",
			"diff": " 728 |      */\n 729 |     function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 730 | ---        require(b > 0, errorMessage);\n     | +++        require(b > 1, errorMessage);\n 731 |         return a % b;\n 732 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__ERC20_init_unchained",
			"start": 27838,
			"end": 27840,
			"startLine": 798,
			"endLine": 798,
			"original": "18",
			"replace": "19",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m2f459ec8",
			"diff": " 796 |         _name = name_;\n 797 |         _symbol = symbol_;\n 798 | ---        _decimals = 18;\n     | +++        _decimals = 19;\n 799 |     }\n 800 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "decreaseAllowance",
			"start": 32144,
			"end": 32274,
			"startLine": 930,
			"endLine": 930,
			"original": "_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));",
			"replace": "/*_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m70bd07c8",
			"diff": " 928 |      */\n 929 |     function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n 930 | ---        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n     | +++        /*_approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));*/\n 931 |         return true;\n 932 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "initializer",
			"start": 8718,
			"end": 8722,
			"startLine": 210,
			"endLine": 210,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "me6bc80e2",
			"diff": " 208 |         if (isTopLevelCall) {\n 209 |             _initializing = true;\n 210 | ---            _initialized = true;\n     | +++            _initialized = false;\n 211 |         }\n 212 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryMul",
			"start": 20063,
			"end": 20067,
			"startLine": 570,
			"endLine": 570,
			"original": " != ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "md694b290",
			"diff": " 568 |         if (a == 0) return (true, 0);\n 569 |         uint256 c = a * b;\n 570 | ---        if (c / a != b) return (false, 0);\n     | +++        if (c / a <= b) return (false, 0);\n 571 |         return (true, c);\n 572 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transfer",
			"start": 29471,
			"end": 29643,
			"startLine": 855,
			"endLine": 858,
			"original": "function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "m595fa931",
			"diff": " 853 |      * - the caller must have a balance of at least `amount`.\n 854 |      */\n 855 | ---    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n     | +++    \n 856 | \n 857 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "onlyClassifiedAuthority",
			"start": 37973,
			"end": 37977,
			"startLine": 1097,
			"endLine": 1097,
			"original": " == ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m65692d3e",
			"diff": "1095 |     modifier onlyClassifiedAuthority() {\n1096 |         require(\n1097 | ---            msg.sender == chainportBridge || msg.sender == chainportCongress,\n     | +++            msg.sender <= chainportBridge || msg.sender == chainportCongress,\n1098 |             \"BridgeMintableToken: Function can be called only by a classified authority.\"\n1099 |         );\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "tryAdd",
			"start": 19225,
			"end": 19229,
			"startLine": 546,
			"endLine": 546,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m8647beeb",
			"diff": " 544 |         uint256 c = a + b;\n 545 |         if (c < a) return (false, 0);\n 546 | ---        return (true, c);\n     | +++        return (false, c);\n 547 |     }\n 548 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "setSideBridgeContract",
			"start": 41543,
			"end": 41547,
			"startLine": 1212,
			"endLine": 1212,
			"original": " != ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "md4450376",
			"diff": "1210 |      */\n1211 |     function setSideBridgeContract(address _chainportBridge) external onlyChainportCongress {\n1212 | ---        require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\");\n     | +++        require(_chainportBridge >= address(0), \"BridgeMintableToken: Address malformed.\");\n1213 |         chainportBridge = _chainportBridge;\n1214 |         emit ChainportBridgeChanged(chainportBridge);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionCall",
			"start": 3311,
			"end": 3482,
			"startLine": 82,
			"endLine": 84,
			"original": "function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m26346c4e",
			"diff": "  80 |      * _Available since v3.1._\n  81 |      */\n  82 | ---    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n     | +++    \n  83 | \n  84 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "burnFrom",
			"start": 39575,
			"end": 39598,
			"startLine": 1149,
			"endLine": 1149,
			"original": "_burn(account, amount);",
			"replace": "/*_burn(account, amount);*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m26ed5ede",
			"diff": "1147 | \n1148 |         _approve(account, _msgSender(), decreasedAllowance);\n1149 | ---        _burn(account, amount);\n     | +++        /*_burn(account, amount);*/\n1150 |     }\n1151 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "sub",
			"start": 23709,
			"end": 23872,
			"startLine": 689,
			"endLine": 692,
			"original": "function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m87aa2ee6",
			"diff": " 687 |      * - Subtraction cannot overflow.\n 688 |      */\n 689 | ---    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n     | +++    \n 690 | \n 691 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionCallWithValue",
			"start": 4911,
			"end": 4915,
			"startLine": 118,
			"endLine": 118,
			"original": " >= ",
			"replace": "  > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mae303447",
			"diff": " 116 |      */\n 117 |     function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n 118 | ---        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n     | +++        require(address(this).balance  > value, \"Address: insufficient balance for call\");\n 119 |         require(isContract(target), \"Address: call to non-contract\");\n 120 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "__Pausable_init",
			"start": 11319,
			"end": 11347,
			"startLine": 294,
			"endLine": 294,
			"original": "__Pausable_init_unchained();",
			"replace": "/*__Pausable_init_unchained();*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m1ef1c387",
			"diff": " 292 |     function __Pausable_init() internal initializer {\n 293 |         __Context_init_unchained();\n 294 | ---        __Pausable_init_unchained();\n     | +++        /*__Pausable_init_unchained();*/\n 295 |     }\n 296 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "withdrawTokenIfStuck",
			"start": 42819,
			"end": 42916,
			"startLine": 1245,
			"endLine": 1245,
			"original": "function withdrawTokenIfStuck(address token, address beneficiary) external onlyChainportCongress ",
			"replace": "function withdrawTokenIfStuck(address token, address beneficiary) external  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "md1fbacdb",
			"diff": "1243 |      * @param   beneficiary is an address of token sender\n1244 |      */\n1245 | ---    function withdrawTokenIfStuck(address token, address beneficiary) external onlyChainportCongress {\n     | +++    function withdrawTokenIfStuck(address token, address beneficiary) external  {\n1246 |         uint256 amount = IERC20(token).balanceOf(address(this));\n1247 |         IERC20(token).transfer(beneficiary, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "isContract",
			"start": 1254,
			"end": 1255,
			"startLine": 37,
			"endLine": 37,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m553294d6",
			"diff": "  35 |         // solhint-disable-next-line no-inline-assembly\n  36 |         assembly { size := extcodesize(account) }\n  37 | ---        return size > 0;\n     | +++        return size > 1;\n  38 |     }\n  39 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "decreaseAllowance",
			"start": 32176,
			"end": 32273,
			"startLine": 930,
			"endLine": 930,
			"original": "_allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"))",
			"replace": "/*_allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"))*/",
			"operator": "FCD",
			"status": null,
			"testingTime": null,
			"id": "m7fe161ea",
			"diff": " 928 |      */\n 929 |     function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n 930 | ---        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n     | +++        _approve(_msgSender(), spender, /*_allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"))*/;\n 931 |         return true;\n 932 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "stateVariable",
			"start": 10238,
			"end": 10240,
			"startLine": 257,
			"endLine": 257,
			"original": "50",
			"replace": "51",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m179664d4",
			"diff": " 255 |         return msg.data;\n 256 |     }\n 257 | ---    uint256[50] private __gap;\n     | +++    uint256[51] private __gap;\n 258 | }\n 259 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionStaticCall",
			"start": 6162,
			"end": 6222,
			"startLine": 147,
			"endLine": 147,
			"original": "return _verifyCallResult(success, returndata, errorMessage);",
			"replace": "_verifyCallResult(success, returndata, errorMessage);",
			"operator": "RSD",
			"status": null,
			"testingTime": null,
			"id": "m971a4bc7",
			"diff": " 145 |         // solhint-disable-next-line avoid-low-level-calls\n 146 |         (bool success, bytes memory returndata) = target.staticcall(data);\n 147 | ---        return _verifyCallResult(success, returndata, errorMessage);\n     | +++        _verifyCallResult(success, returndata, errorMessage);\n 148 |     }\n 149 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "add",
			"start": 21080,
			"end": 21084,
			"startLine": 606,
			"endLine": 606,
			"original": " >= ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m08499470",
			"diff": " 604 |     function add(uint256 a, uint256 b) internal pure returns (uint256) {\n 605 |         uint256 c = a + b;\n 606 | ---        require(c >= a, \"SafeMath: addition overflow\");\n     | +++        require(c == a, \"SafeMath: addition overflow\");\n 607 |         return c;\n 608 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "functionCallWithValue",
			"start": 4259,
			"end": 4483,
			"startLine": 107,
			"endLine": 109,
			"original": "function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }",
			"replace": "",
			"operator": "OLFD",
			"status": null,
			"testingTime": null,
			"id": "m1eb8a75e",
			"diff": " 105 |      * _Available since v3.1._\n 106 |      */\n 107 | ---    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n     | +++    \n 108 | \n 109 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "setSideBridgeContract",
			"start": 41543,
			"end": 41547,
			"startLine": 1212,
			"endLine": 1212,
			"original": " != ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m3afed599",
			"diff": "1210 |      */\n1211 |     function setSideBridgeContract(address _chainportBridge) external onlyChainportCongress {\n1212 | ---        require(_chainportBridge != address(0), \"BridgeMintableToken: Address malformed.\");\n     | +++        require(_chainportBridge == address(0), \"BridgeMintableToken: Address malformed.\");\n1213 |         chainportBridge = _chainportBridge;\n1214 |         emit ChainportBridgeChanged(chainportBridge);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "trySub",
			"start": 19491,
			"end": 19496,
			"startLine": 555,
			"endLine": 555,
			"original": "false",
			"replace": "true",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "md0781e74",
			"diff": " 553 |      */\n 554 |     function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 555 | ---        if (b > a) return (false, 0);\n     | +++        if (b > a) return (true, 0);\n 556 |         return (true, a - b);\n 557 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_transfer",
			"start": 32969,
			"end": 32973,
			"startLine": 950,
			"endLine": 950,
			"original": " != ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m657d1c76",
			"diff": " 948 |     function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n 949 |         require(sender != address(0), \"ERC20: transfer from the zero address\");\n 950 | ---        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n     | +++        require(recipient <= address(0), \"ERC20: transfer to the zero address\");\n 951 | \n 952 |         _beforeTokenTransfer(sender, recipient, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "onlyChainportCongress",
			"start": 38319,
			"end": 38323,
			"startLine": 1108,
			"endLine": 1108,
			"original": " == ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m27bde169",
			"diff": "1106 |     modifier onlyChainportCongress() {\n1107 |         require(\n1108 | ---            msg.sender == chainportCongress,\n     | +++            msg.sender <= chainportCongress,\n1109 |             \"BridgeMintableToken: Function can be called only by Chainport Congress.\"\n1110 |         );\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "mod",
			"start": 25451,
			"end": 25454,
			"startLine": 730,
			"endLine": 730,
			"original": " > ",
			"replace": " >=  ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m696558e3",
			"diff": " 728 |      */\n 729 |     function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n 730 | ---        require(b > 0, errorMessage);\n     | +++        require(b >=  0, errorMessage);\n 731 |         return a % b;\n 732 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "transferFrom",
			"start": 30761,
			"end": 30770,
			"startLine": 893,
			"endLine": 893,
			"original": "recipient",
			"replace": "sender",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m771b97c8",
			"diff": " 891 |      */\n 892 |     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n 893 | ---        _transfer(sender, recipient, amount);\n     | +++        _transfer(sender, sender, amount);\n 894 |         _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n 895 |         return true;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "onlyClassifiedAuthority",
			"start": 38006,
			"end": 38010,
			"startLine": 1097,
			"endLine": 1097,
			"original": " == ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m4d66b8c2",
			"diff": "1095 |     modifier onlyClassifiedAuthority() {\n1096 |         require(\n1097 | ---            msg.sender == chainportBridge || msg.sender == chainportCongress,\n     | +++            msg.sender == chainportBridge || msg.sender != chainportCongress,\n1098 |             \"BridgeMintableToken: Function can be called only by a classified authority.\"\n1099 |         );\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "trySub",
			"start": 19518,
			"end": 19522,
			"startLine": 556,
			"endLine": 556,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m77cd609a",
			"diff": " 554 |     function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n 555 |         if (b > a) return (false, 0);\n 556 | ---        return (true, a - b);\n     | +++        return (false, a - b);\n 557 |     }\n 558 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_setupDecimals",
			"start": 35842,
			"end": 35851,
			"startLine": 1028,
			"endLine": 1028,
			"original": "decimals_",
			"replace": "decimals_ - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m939874c6",
			"diff": "1026 |      */\n1027 |     function _setupDecimals(uint8 decimals_) internal virtual {\n1028 | ---        _decimals = decimals_;\n     | +++        _decimals = decimals_ - 1;\n1029 |     }\n1030 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/BridgeMintableTokenV2.sol",
			"functionName": "_pause",
			"start": 12309,
			"end": 12358,
			"startLine": 339,
			"endLine": 339,
			"original": "function _pause() internal virtual whenNotPaused ",
			"replace": "function _pause() internal virtual  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m475361d5",
			"diff": " 337 |      * - The contract must not be paused.\n 338 |      */\n 339 | ---    function _pause() internal virtual whenNotPaused {\n     | +++    function _pause() internal virtual  {\n 340 |         _paused = true;\n 341 |         emit Paused(_msgSender());\n"
		}
	]
}
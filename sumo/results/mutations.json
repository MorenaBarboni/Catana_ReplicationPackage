{
	"PaladinController.sol": [
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 25662,
			"end": 25666,
			"startLine": 677,
			"endLine": 677,
			"original": " != ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m83bd3979",
			"diff": " 675 | \n 676 |     function withdrawToken(address token, uint256 amount, address recipient) external adminOnly {\n 677 | ---        require(recipient != address(0), Errors.ZERO_ADDRESS);\n     | +++        require(recipient >= address(0), Errors.ZERO_ADDRESS);\n 678 |         require(token != address(0), Errors.ZERO_ADDRESS);\n 679 |         require(amount > 0, Errors.INVALID_PARAMETERS);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "accrueSupplyRewards",
			"start": 16049,
			"end": 16064,
			"startLine": 441,
			"endLine": 441,
			"original": "userBalance.mul",
			"replace": "userBalance.sub",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m5ed6ba62",
			"diff": " 439 |             uint userBalance = supplierDeposits[palPool][user];\n 440 | \n 441 | ---            uint userAccruedRewards = userBalance.mul(indexDiff).div(1e36);\n     | +++            uint userAccruedRewards = userBalance.sub(indexDiff).div(1e36);\n 442 | \n 443 |             // Add the new amount of rewards to the user total claimable balance\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 11625,
			"end": 11629,
			"startLine": 332,
			"endLine": 332,
			"original": " <= ",
			"replace": "  < ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m07111f0c",
			"diff": " 330 |         IERC20 token = IERC20(palToken);\n 331 | \n 332 | ---        require(amount <= token.balanceOf(user), Errors.INSUFFICIENT_BALANCE);\n     | +++        require(amount  < token.balanceOf(user), Errors.INSUFFICIENT_BALANCE);\n 333 | \n 334 |         updateSupplyIndex(palPool);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "_calculateLoanRewards",
			"start": 18651,
			"end": 18741,
			"startLine": 500,
			"endLine": 500,
			"original": "borrowRewardsStartBlock[palPool] == 0 || borrowRewardsStartBlock[palPool] > loanStartBlock",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "mae7d1ebf",
			"diff": " 498 | \n 499 |         // Loan as taken before Borrow Rewards were set\n 500 | ---        if(borrowRewardsStartBlock[palPool] == 0 || borrowRewardsStartBlock[palPool] > loanStartBlock) return 0;\n     | +++        if(false) return 0;\n 501 | \n 502 |         // Calculate the amount of rewards based on the Pool ratio & the amount of usedFees in the Loan\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "closeBorrowVerify",
			"start": 10112,
			"end": 10138,
			"startLine": 292,
			"endLine": 292,
			"original": "autoBorrowRewards[palPool]",
			"replace": "true",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "m5e657bdb",
			"diff": " 290 | \n 291 |         //Accrue Rewards to the Loan's owner\n 292 | ---        if(autoBorrowRewards[palPool]) accrueBorrowRewards(palPool, loanAddress); //Because some PalPool call this method as view\n     | +++        if(true) accrueBorrowRewards(palPool, loanAddress); //Because some PalPool call this method as view\n 293 |         //So we need to know if the call can update storage or not\n 294 |         //If not, will need to use the Manual Borrow Reward claim system\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1550,
			"end": 1554,
			"startLine": 50,
			"endLine": 50,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m287e50e7",
			"diff": "  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 |             if(_pools[i] == _pool){\n  50 | ---                return true;\n     | +++                return false;\n  51 |             }\n  52 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "closeBorrowVerify",
			"start": 10420,
			"end": 10424,
			"startLine": 297,
			"endLine": 297,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "ma7bd15cc",
			"diff": " 295 |         \n 296 |         //no method yet \n 297 | ---        return true;\n     | +++        return false;\n 298 |     }\n 299 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "_calculateLoanRewards",
			"start": 18476,
			"end": 18487,
			"startLine": 494,
			"endLine": 494,
			"original": "loanAddress",
			"replace": "palPool",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m8646ac91",
			"diff": " 492 | \n 493 |         IPalPool pool = IPalPool(palPool);\n 494 | ---        (,,,,,,,uint feesUsedAmount,uint loanStartBlock,,bool closed,) = pool.getBorrowData(loanAddress);\n     | +++        (,,,,,,,uint feesUsedAmount,uint loanStartBlock,,bool closed,) = pool.getBorrowData(palPool);\n 495 | \n 496 |         // Need the Loan to be closed before accruing rewards\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 5494,
			"end": 5498,
			"startLine": 163,
			"endLine": 163,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m95a6fa8a",
			"diff": " 161 |                 emit RemovePalPool(palPool, _palToken);\n 162 |              \n 163 | ---                return true;\n     | +++                return false;\n 164 |             }\n 165 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "expandBorrowVerify",
			"start": 9260,
			"end": 9286,
			"startLine": 270,
			"endLine": 270,
			"original": "autoBorrowRewards[palPool]",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "md3dc5eb8",
			"diff": " 268 | \n 269 |         // In case the Loan is expanded, the new ratio is used (in case the ratio changed)\n 270 | ---        if(autoBorrowRewards[palPool]) setLoanBorrowRewards(palPool, loanAddress); //Because some PalPool call this method as view\n     | +++        if(false) setLoanBorrowRewards(palPool, loanAddress); //Because some PalPool call this method as view\n 271 |         //So we need to know if the call can update storage or not\n 272 |         //If not, will need to use the Manual Borrow Reward claim system\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawRewardToken",
			"start": 25443,
			"end": 25456,
			"startLine": 671,
			"endLine": 671,
			"original": "address(this)",
			"replace": "recipient",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m52471d13",
			"diff": " 669 |         IERC20 token = IERC20(rewardToken());\n 670 | \n 671 | ---        require(amount <= token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n     | +++        require(amount <= token.balanceOf(recipient), Errors.BALANCE_TOO_LOW);\n 672 | \n 673 |         token.safeTransfer(recipient, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1506,
			"end": 1524,
			"startLine": 49,
			"endLine": 49,
			"original": "_pools[i] == _pool",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "med739e1d",
			"diff": "  47 |         address[] memory _pools = palPools;\n  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 | ---            if(_pools[i] == _pool){\n     | +++            if(false){\n  50 |                 return true;\n  51 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1467,
			"end": 1470,
			"startLine": 48,
			"endLine": 48,
			"original": " < ",
			"replace": " > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m1fb1d141",
			"diff": "  46 |         //Check if the given address is in the palPools list\n  47 |         address[] memory _pools = palPools;\n  48 | ---        for(uint i = 0; i < _pools.length; i++){\n     | +++        for(uint i = 0; i > _pools.length; i++){\n  49 |             if(_pools[i] == _pool){\n  50 |                 return true;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "addNewPool",
			"start": 3906,
			"end": 3928,
			"startLine": 118,
			"endLine": 118,
			"original": "supplyState.index == 0",
			"replace": "true",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "m856f356a",
			"diff": " 116 |         //Update the Reward State for the new Pool\n 117 |         PoolRewardsState storage supplyState = supplyRewardState[_palPool];\n 118 | ---        if(supplyState.index == 0){\n     | +++        if(true){\n 119 |             supplyState.index = initialRewardsIndex;\n 120 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawPossible",
			"start": 6042,
			"end": 6046,
			"startLine": 179,
			"endLine": 179,
			"original": " >= ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m8f4d0a03",
			"diff": " 177 |         //Get the underlying balance of the palPool contract to check if the action is possible\n 178 |         PalPool _palPool = PalPool(palPool);\n 179 | ---        return(_palPool.underlyingBalance() >= amount);\n     | +++        return(_palPool.underlyingBalance() == amount);\n 180 |     }\n 181 |     \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "borrowPossible",
			"start": 6544,
			"end": 6548,
			"startLine": 192,
			"endLine": 192,
			"original": " >= ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "md297bd66",
			"diff": " 190 |         //Get the underlying balance of the palPool contract to check if the action is possible\n 191 |         PalPool _palPool = PalPool(palPool);\n 192 | ---        return(_palPool.underlyingBalance() >= amount);\n     | +++        return(_palPool.underlyingBalance() <= amount);\n 193 |     }\n 194 |     \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "setInitialPools",
			"start": 2908,
			"end": 2912,
			"startLine": 90,
			"endLine": 90,
			"original": " == ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "med2f6d2b",
			"diff": "  88 |             //Update the Reward State for the new Pool\n  89 |             PoolRewardsState storage supplyState = supplyRewardState[_palPools[i]];\n  90 | ---            if(supplyState.index == 0){\n     | +++            if(supplyState.index != 0){\n  91 |                 supplyState.index = initialRewardsIndex;\n  92 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1515,
			"end": 1519,
			"startLine": 49,
			"endLine": 49,
			"original": " == ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m416a09de",
			"diff": "  47 |         address[] memory _pools = palPools;\n  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 | ---            if(_pools[i] == _pool){\n     | +++            if(_pools[i] >= _pool){\n  50 |                 return true;\n  51 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4915,
			"end": 4919,
			"startLine": 147,
			"endLine": 147,
			"original": " == ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mc85f49f0",
			"diff": " 145 |         uint lastIndex = (_pools.length).sub(1);\n 146 |         for(uint i = 0; i < _pools.length; i++){\n 147 | ---            if(_pools[i] == palPool){\n     | +++            if(_pools[i] >= palPool){\n 148 |                 //get the address of the PalToken for the Event\n 149 |                 address _palToken = palTokens[i];\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "claimLoanRewards",
			"start": 19860,
			"end": 19867,
			"startLine": 523,
			"endLine": 523,
			"original": "palPool",
			"replace": "loanAddress",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m93c2c421",
			"diff": " 521 |         // Check if the PalLoan has some claimable rewards, and if it was not claimed already\n 522 |         require(msg.sender == borrower, Errors.NOT_LOAN_OWNER);\n 523 | ---        uint claimableAmount = _calculateLoanRewards(palPool, loanAddress);\n     | +++        uint claimableAmount = _calculateLoanRewards(loanAddress, loanAddress);\n 524 | \n 525 |         require(closed && claimableAmount != 0, Errors.NOT_CLAIMABLE);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "setInitialPools",
			"start": 2542,
			"end": 2546,
			"startLine": 82,
			"endLine": 82,
			"original": " == ",
			"replace": " >= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m67071666",
			"diff": "  80 |     function setInitialPools(address[] memory _palTokens, address[] memory _palPools) external override adminOnly returns(bool){\n  81 |         require(!initialized, Errors.POOL_LIST_ALREADY_SET);\n  82 | ---        require(_palTokens.length == _palPools.length, Errors.LIST_SIZES_NOT_EQUAL);\n     | +++        require(_palTokens.length >= _palPools.length, Errors.LIST_SIZES_NOT_EQUAL);\n  83 |         palPools = _palPools;\n  84 |         palTokens = _palTokens;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "setInitialPools",
			"start": 2891,
			"end": 2913,
			"startLine": 90,
			"endLine": 90,
			"original": "supplyState.index == 0",
			"replace": "true",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "m5f760455",
			"diff": "  88 |             //Update the Reward State for the new Pool\n  89 |             PoolRewardsState storage supplyState = supplyRewardState[_palPools[i]];\n  90 | ---            if(supplyState.index == 0){\n     | +++            if(true){\n  91 |                 supplyState.index = initialRewardsIndex;\n  92 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "totalSupplyRewardSpeed",
			"start": 24244,
			"end": 24258,
			"startLine": 639,
			"endLine": 639,
			"original": "totalSpeed.add",
			"replace": "totalSpeed.mul",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "mba136310",
			"diff": " 637 |         uint totalSpeed = 0;\n 638 |         for(uint i = 0; i < _pools.length; i++){\n 639 | ---            totalSpeed = totalSpeed.add(supplySpeeds[_pools[i]]);\n     | +++            totalSpeed = totalSpeed.mul(supplySpeeds[_pools[i]]);\n 640 |         }\n 641 |         return totalSpeed;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 12061,
			"end": 12065,
			"startLine": 344,
			"endLine": 344,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "mdb9fb896",
			"diff": " 342 |         emit Deposit(user, palToken, amount);\n 343 | \n 344 | ---        return true;\n     | +++        return false;\n 345 |     }\n 346 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "accrueBorrowRewards",
			"start": 17351,
			"end": 17384,
			"startLine": 469,
			"endLine": 469,
			"original": "!isLoanRewardClaimed[loanAddress]",
			"replace": " isLoanRewardClaimed[loanAddress]",
			"operator": "UORD",
			"status": null,
			"testingTime": null,
			"id": "m05a72282",
			"diff": " 467 | \n 468 |         // Skip if no rewards set for the PalLoan OR if rewards were already claimed for the PalLoan\n 469 | ---        if(loanBorrowRatio > 0 && !isLoanRewardClaimed[loanAddress]){\n     | +++        if(loanBorrowRatio > 0 &&  isLoanRewardClaimed[loanAddress]){\n 470 |             IPalPool pool = IPalPool(palPool);\n 471 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawRewardToken",
			"start": 25423,
			"end": 25427,
			"startLine": 671,
			"endLine": 671,
			"original": " <= ",
			"replace": "  < ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m4ed7f206",
			"diff": " 669 |         IERC20 token = IERC20(rewardToken());\n 670 | \n 671 | ---        require(amount <= token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n     | +++        require(amount  < token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n 672 | \n 673 |         token.safeTransfer(recipient, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 26167,
			"end": 26171,
			"startLine": 688,
			"endLine": 688,
			"original": " <= ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m646c1778",
			"diff": " 686 |         IERC20 _token = IERC20(token);\n 687 | \n 688 | ---        require(amount <= _token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n     | +++        require(amount == _token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n 689 | \n 690 |         _token.safeTransfer(recipient, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawRewardToken",
			"start": 25319,
			"end": 25322,
			"startLine": 667,
			"endLine": 667,
			"original": " > ",
			"replace": " < ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mf3282d47",
			"diff": " 665 |     function withdrawRewardToken(uint256 amount, address recipient) external override adminOnly {\n 666 |         require(recipient != address(0), Errors.ZERO_ADDRESS);\n 667 | ---        require(amount > 0, Errors.INVALID_PARAMETERS);\n     | +++        require(amount < 0, Errors.INVALID_PARAMETERS);\n 668 | \n 669 |         IERC20 token = IERC20(rewardToken());\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawPossible",
			"start": 6042,
			"end": 6046,
			"startLine": 179,
			"endLine": 179,
			"original": " >= ",
			"replace": "  > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mbca926cc",
			"diff": " 177 |         //Get the underlying balance of the palPool contract to check if the action is possible\n 178 |         PalPool _palPool = PalPool(palPool);\n 179 | ---        return(_palPool.underlyingBalance() >= amount);\n     | +++        return(_palPool.underlyingBalance()  > amount);\n 180 |     }\n 181 |     \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 27951,
			"end": 27954,
			"startLine": 742,
			"endLine": 742,
			"original": " < ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m7f4c58cc",
			"diff": " 740 | \n 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 | ---        require(n < 2**224, \"Number is over 224 bits\");\n     | +++        require(n <= 2**224, \"Number is over 224 bits\");\n 743 |         return uint224(n);\n 744 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1595,
			"end": 1600,
			"startLine": 53,
			"endLine": 53,
			"original": "false",
			"replace": "true",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m27fbb4b0",
			"diff": "  51 |             }\n  52 |         }\n  53 | ---        return false;\n     | +++        return true;\n  54 |     }\n  55 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "estimateClaimable",
			"start": 22027,
			"end": 22060,
			"startLine": 576,
			"endLine": 576,
			"original": "supplierDeposits[_pools[i]][user]",
			"replace": "supplierDeposits[_pools[i]][user] - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m2f2e68b6",
			"diff": " 574 |                 // And using the user PalToken balance deposited in the Controller,\n 575 |                 // we can get how much rewards where accrued\n 576 | ---                uint userBalance = supplierDeposits[_pools[i]][user];\n     | +++                uint userBalance = supplierDeposits[_pools[i]][user] - 1;\n 577 | \n 578 |                 uint userAccruedRewards = userBalance.mul(indexDiff).div(1e36);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4906,
			"end": 4926,
			"startLine": 147,
			"endLine": 147,
			"original": "_pools[i] == palPool",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "m657ffeab",
			"diff": " 145 |         uint lastIndex = (_pools.length).sub(1);\n 146 |         for(uint i = 0; i < _pools.length; i++){\n 147 | ---            if(_pools[i] == palPool){\n     | +++            if(false){\n 148 |                 //get the address of the PalToken for the Event\n 149 |                 address _palToken = palTokens[i];\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "estimateClaimable",
			"start": 21639,
			"end": 21658,
			"startLine": 567,
			"endLine": 567,
			"original": "initialRewardsIndex",
			"replace": "initialRewardsIndex + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m6216c314",
			"diff": " 565 |             if(userSupplyIndex == 0 && currentSupplyIndex >= initialRewardsIndex){\n 566 |                 // Set the initial Index for the user\n 567 | ---                userSupplyIndex = initialRewardsIndex;\n     | +++                userSupplyIndex = initialRewardsIndex + 1;\n 568 |             }\n 569 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe32",
			"start": 28108,
			"end": 28110,
			"startLine": 747,
			"endLine": 747,
			"original": "32",
			"replace": "33",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "mc0942df0",
			"diff": " 745 | \n 746 |     function safe32(uint n) internal pure returns (uint32) {\n 747 | ---        require(n < 2**32, \"Number is over 32 bits\");\n     | +++        require(n < 2**33, \"Number is over 32 bits\");\n 748 |         return uint32(n);\n 749 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 11324,
			"end": 12072,
			"startLine": 326,
			"endLine": 345,
			"original": "function deposit(address palToken, uint amount) external lock override returns(bool){\n        address palPool = palTokenToPalPool[palToken];\n        require(isPalPool(palPool), Errors.POOL_NOT_LISTED);\n        address user = msg.sender;\n        IERC20 token = IERC20(palToken);\n\n        require(amount <= token.balanceOf(user), Errors.INSUFFICIENT_BALANCE);\n\n        updateSupplyIndex(palPool);\n        accrueSupplyRewards(palPool, user);\n\n        supplierDeposits[palPool][user] = supplierDeposits[palPool][user].add(amount);\n        totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].add(amount);\n\n        token.safeTransferFrom(user, address(this), amount);\n\n        emit Deposit(user, palToken, amount);\n\n        return true;\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "me969647d",
			"diff": " 324 |     // PalToken Deposit/Withdraw functions\n 325 | \n 326 | ---    function deposit(address palToken, uint amount) external lock override returns(bool){\n        address palPool = palTokenToPalPool[palToken];\n        require(isPalPool(palPool), Errors.POOL_NOT_LISTED);\n        address user = msg.sender;\n        IERC20 token = IERC20(palToken);\n     | +++    \n 327 | \n 328 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27631,
			"end": 27632,
			"startLine": 728,
			"endLine": 728,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m928d7a4f",
			"diff": " 726 |             borrowRewardsStartBlock[palPool] = block.number;\n 727 |         }\n 728 | ---        else if(newBorrowRatio == 0){\n     | +++        else if(newBorrowRatio == 1){\n 729 |             borrowRewardsStartBlock[palPool] = 0;\n 730 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 25784,
			"end": 25785,
			"startLine": 679,
			"endLine": 679,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m17fc17da",
			"diff": " 677 |         require(recipient != address(0), Errors.ZERO_ADDRESS);\n 678 |         require(token != address(0), Errors.ZERO_ADDRESS);\n 679 | ---        require(amount > 0, Errors.INVALID_PARAMETERS);\n     | +++        require(amount > 1, Errors.INVALID_PARAMETERS);\n 680 | \n 681 |         //Can't withdraw the reward token (use the correct method\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 26188,
			"end": 26201,
			"startLine": 688,
			"endLine": 688,
			"original": "address(this)",
			"replace": "token",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mb6e28f01",
			"diff": " 686 |         IERC20 _token = IERC20(token);\n 687 | \n 688 | ---        require(amount <= _token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n     | +++        require(amount <= _token.balanceOf(token), Errors.BALANCE_TOO_LOW);\n 689 | \n 690 |         _token.safeTransfer(recipient, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27361,
			"end": 27365,
			"startLine": 721,
			"endLine": 721,
			"original": " != ",
			"replace": " == ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m7f1ecd16",
			"diff": " 719 |         }\n 720 | \n 721 | ---        if(newBorrowRatio != borrowRatios[palPool]){\n     | +++        if(newBorrowRatio == borrowRatios[palPool]){\n 722 |             borrowRatios[palPool] = newBorrowRatio;\n 723 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "claim",
			"start": 23340,
			"end": 23360,
			"startLine": 613,
			"endLine": 613,
			"original": "accruedRewards[user]",
			"replace": "accruedRewards[user] - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m7e6e6f31",
			"diff": " 611 | \n 612 |         // Get current amount claimable for the user\n 613 | ---        uint toClaim = accruedRewards[user];\n     | +++        uint toClaim = accruedRewards[user] - 1;\n 614 | \n 615 |         // If there is a claimable amount\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 27957,
			"end": 27960,
			"startLine": 742,
			"endLine": 742,
			"original": "224",
			"replace": "223",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m96d3373a",
			"diff": " 740 | \n 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 | ---        require(n < 2**224, \"Number is over 224 bits\");\n     | +++        require(n < 2**223, \"Number is over 224 bits\");\n 743 |         return uint224(n);\n 744 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawRewardToken",
			"start": 25319,
			"end": 25322,
			"startLine": 667,
			"endLine": 667,
			"original": " > ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m9e522e41",
			"diff": " 665 |     function withdrawRewardToken(uint256 amount, address recipient) external override adminOnly {\n 666 |         require(recipient != address(0), Errors.ZERO_ADDRESS);\n 667 | ---        require(amount > 0, Errors.INVALID_PARAMETERS);\n     | +++        require(amount != 0, Errors.INVALID_PARAMETERS);\n 668 | \n 669 |         IERC20 token = IERC20(rewardToken());\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "claimLoanRewards",
			"start": 20215,
			"end": 20228,
			"startLine": 532,
			"endLine": 532,
			"original": "address(this)",
			"replace": "palPool",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m50ade7b2",
			"diff": " 530 |         // Transfer the rewards to the borrower\n 531 |         IERC20 token = IERC20(rewardToken());\n 532 | ---        require(claimableAmount <= token.balanceOf(address(this)), Errors.REWARDS_CASH_TOO_LOW);\n     | +++        require(claimableAmount <= token.balanceOf(palPool), Errors.REWARDS_CASH_TOO_LOW);\n 533 | \n 534 |         token.safeTransfer(borrower, claimableAmount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27495,
			"end": 27499,
			"startLine": 725,
			"endLine": 725,
			"original": " == ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m08fd0262",
			"diff": " 723 |         }\n 724 | \n 725 | ---        if(borrowRewardsStartBlock[palPool] == 0 && newBorrowRatio != 0){\n     | +++        if(borrowRewardsStartBlock[palPool] != 0 && newBorrowRatio != 0){\n 726 |             borrowRewardsStartBlock[palPool] = block.number;\n 727 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "estimateClaimable",
			"start": 21774,
			"end": 21813,
			"startLine": 571,
			"endLine": 571,
			"original": "currentSupplyIndex.sub(userSupplyIndex)",
			"replace": "currentSupplyIndex.sub(userSupplyIndex) + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "mcad74851",
			"diff": " 569 | \n 570 |             // Get the difference of index with the last one for user\n 571 | ---            uint indexDiff = currentSupplyIndex.sub(userSupplyIndex);\n     | +++            uint indexDiff = currentSupplyIndex.sub(userSupplyIndex) + 1;\n 572 | \n 573 |             if(indexDiff > 0){\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27682,
			"end": 27683,
			"startLine": 729,
			"endLine": 729,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m7ef34790",
			"diff": " 727 |         }\n 728 |         else if(newBorrowRatio == 0){\n 729 | ---            borrowRewardsStartBlock[palPool] = 0;\n     | +++            borrowRewardsStartBlock[palPool] = 1;\n 730 |         }\n 731 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "borrowPossible",
			"start": 6544,
			"end": 6548,
			"startLine": 192,
			"endLine": 192,
			"original": " >= ",
			"replace": "  > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m8911a6e1",
			"diff": " 190 |         //Get the underlying balance of the palPool contract to check if the action is possible\n 191 |         PalPool _palPool = PalPool(palPool);\n 192 | ---        return(_palPool.underlyingBalance() >= amount);\n     | +++        return(_palPool.underlyingBalance()  > amount);\n 193 |     }\n 194 |     \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 26258,
			"end": 26267,
			"startLine": 690,
			"endLine": 690,
			"original": "recipient",
			"replace": "token",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m29e90e04",
			"diff": " 688 |         require(amount <= _token.balanceOf(address(this)), Errors.BALANCE_TOO_LOW);\n 689 | \n 690 | ---        _token.safeTransfer(recipient, amount);\n     | +++        _token.safeTransfer(token, amount);\n 691 |     }\n 692 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 28005,
			"end": 28015,
			"startLine": 743,
			"endLine": 743,
			"original": "uint224(n)",
			"replace": "uint216(n)",
			"operator": "CER",
			"status": null,
			"testingTime": null,
			"id": "m21281892",
			"diff": " 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 |         require(n < 2**224, \"Number is over 224 bits\");\n 743 | ---        return uint224(n);\n     | +++        return uint216(n);\n 744 |     }\n 745 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1515,
			"end": 1519,
			"startLine": 49,
			"endLine": 49,
			"original": " == ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "maabba611",
			"diff": "  47 |         address[] memory _pools = palPools;\n  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 | ---            if(_pools[i] == _pool){\n     | +++            if(_pools[i] != _pool){\n  50 |                 return true;\n  51 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12521,
			"end": 12529,
			"startLine": 358,
			"endLine": 358,
			"original": "palToken",
			"replace": "palPool",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mf2d0cc7a",
			"diff": " 356 |         accrueSupplyRewards(palPool, user);\n 357 | \n 358 | ---        IERC20 token = IERC20(palToken);\n     | +++        IERC20 token = IERC20(palPool);\n 359 | \n 360 |         supplierDeposits[palPool][user] = supplierDeposits[palPool][user].sub(amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updateSupplyIndex",
			"start": 14421,
			"end": 14439,
			"startLine": 403,
			"endLine": 403,
			"original": "ellapsedBlocks > 0",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "me81a0c24",
			"diff": " 401 |             state.blockNumber = safe32(currentBlock);\n 402 |         }\n 403 | ---        else if(ellapsedBlocks > 0){\n     | +++        else if(false){\n 404 |             // If blocks ellapsed, but no rewards to distribute (speed == 0),\n 405 |             // just write the last update block number\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12575,
			"end": 12610,
			"startLine": 360,
			"endLine": 360,
			"original": "supplierDeposits[palPool][user].sub",
			"replace": "supplierDeposits[palPool][user].mod",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m7bfd140c",
			"diff": " 358 |         IERC20 token = IERC20(palToken);\n 359 | \n 360 | ---        supplierDeposits[palPool][user] = supplierDeposits[palPool][user].sub(amount);\n     | +++        supplierDeposits[palPool][user] = supplierDeposits[palPool][user].mod(amount);\n 361 |         totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].sub(amount);\n 362 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "claimLoanRewards",
			"start": 19432,
			"end": 19519,
			"startLine": 517,
			"endLine": 517,
			"original": "function claimLoanRewards(address palPool, address loanAddress) external lock override ",
			"replace": "function claimLoanRewards(address palPool, address loanAddress) external  override ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m498003dc",
			"diff": " 515 |     }\n 516 | \n 517 | ---    function claimLoanRewards(address palPool, address loanAddress) external lock override {\n     | +++    function claimLoanRewards(address palPool, address loanAddress) external  override {\n 518 |         IPalPool pool = IPalPool(palPool);\n 519 |         (address borrower,,,,,,,,,,bool closed,) = pool.getBorrowData(loanAddress);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "addNewPool",
			"start": 4035,
			"end": 4047,
			"startLine": 121,
			"endLine": 121,
			"original": "block.number",
			"replace": "block.number-1",
			"operator": "GVR",
			"status": null,
			"testingTime": null,
			"id": "m90a62783",
			"diff": " 119 |             supplyState.index = initialRewardsIndex;\n 120 |         }\n 121 | ---        supplyState.blockNumber = safe32(block.number);\n     | +++        supplyState.blockNumber = safe32(block.number-1);\n 122 | \n 123 |         //The other Reward values should already be set at 0 :\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "borrowVerify",
			"start": 8694,
			"end": 8698,
			"startLine": 255,
			"endLine": 255,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "me17121ef",
			"diff": " 253 |         \n 254 |         //no method yet \n 255 | ---        return true;\n     | +++        return false;\n 256 |     }\n 257 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27500,
			"end": 27504,
			"startLine": 725,
			"endLine": 725,
			"original": " && ",
			"replace": " || ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mf99c2573",
			"diff": " 723 |         }\n 724 | \n 725 | ---        if(borrowRewardsStartBlock[palPool] == 0 && newBorrowRatio != 0){\n     | +++        if(borrowRewardsStartBlock[palPool] == 0 || newBorrowRatio != 0){\n 726 |             borrowRewardsStartBlock[palPool] = block.number;\n 727 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 11892,
			"end": 11926,
			"startLine": 338,
			"endLine": 338,
			"original": "totalSupplierDeposits[palPool].add",
			"replace": "totalSupplierDeposits[palPool].div",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "md52d6876",
			"diff": " 336 | \n 337 |         supplierDeposits[palPool][user] = supplierDeposits[palPool][user].add(amount);\n 338 | ---        totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].add(amount);\n     | +++        totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].div(amount);\n 339 | \n 340 |         token.safeTransferFrom(user, address(this), amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 11436,
			"end": 11463,
			"startLine": 327,
			"endLine": 327,
			"original": "palTokenToPalPool[palToken]",
			"replace": "palToken",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mf459b976",
			"diff": " 325 | \n 326 |     function deposit(address palToken, uint amount) external lock override returns(bool){\n 327 | ---        address palPool = palTokenToPalPool[palToken];\n     | +++        address palPool = palToken;\n 328 |         require(isPalPool(palPool), Errors.POOL_NOT_LISTED);\n 329 |         address user = msg.sender;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe32",
			"start": 28106,
			"end": 28108,
			"startLine": 747,
			"endLine": 747,
			"original": "**",
			"replace": "*",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m2985d21c",
			"diff": " 745 | \n 746 |     function safe32(uint n) internal pure returns (uint32) {\n 747 | ---        require(n < 2**32, \"Number is over 32 bits\");\n     | +++        require(n < 2*32, \"Number is over 32 bits\");\n 748 |         return uint32(n);\n 749 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4818,
			"end": 4837,
			"startLine": 145,
			"endLine": 145,
			"original": "(_pools.length).sub",
			"replace": "(_pools.length).add",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "mc01269f3",
			"diff": " 143 |         address[] memory _pools = palPools;\n 144 |         \n 145 | ---        uint lastIndex = (_pools.length).sub(1);\n     | +++        uint lastIndex = (_pools.length).add(1);\n 146 |         for(uint i = 0; i < _pools.length; i++){\n 147 |             if(_pools[i] == palPool){\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "addNewPool",
			"start": 3673,
			"end": 3682,
			"startLine": 112,
			"endLine": 112,
			"original": "_palToken",
			"replace": "_palPool",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m4321a982",
			"diff": " 110 |         require(!isPalPool(_palPool), Errors.POOL_ALREADY_LISTED);\n 111 | \n 112 | ---        palTokens.push(_palToken);\n     | +++        palTokens.push(_palPool);\n 113 |         palPools.push(_palPool);\n 114 |         palTokenToPalPool[_palToken] = _palPool;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "estimateClaimable",
			"start": 21358,
			"end": 21392,
			"startLine": 562,
			"endLine": 562,
			"original": "supplyRewardState[_pools[i]].index",
			"replace": "supplyRewardState[_pools[i]].index + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m5ba1870a",
			"diff": " 560 |             // Get the current reward index for the Pool\n 561 |             // And the user last reward index\n 562 | ---            uint currentSupplyIndex = supplyRewardState[_pools[i]].index;\n     | +++            uint currentSupplyIndex = supplyRewardState[_pools[i]].index + 1;\n 563 |             uint userSupplyIndex = supplierRewardIndex[_pools[i]][user];\n 564 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "_calculateLoanRewards",
			"start": 19038,
			"end": 19042,
			"startLine": 505,
			"endLine": 505,
			"original": "1e18",
			"replace": "1e18 + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "me8ebdf40",
			"diff": " 503 |         uint poolBorrowRatio = loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool];\n 504 | \n 505 | ---        return feesUsedAmount.mul(poolBorrowRatio).div(1e18);\n     | +++        return feesUsedAmount.mul(poolBorrowRatio).div(1e18 + 1);\n 506 |     }\n 507 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4546,
			"end": 5551,
			"startLine": 139,
			"endLine": 167,
			"original": "function removePool(address palPool) external override adminOnly returns(bool){\n        //Remove a palToken & palPool from the list\n        require(isPalPool(palPool), Errors.POOL_NOT_LISTED);\n\n        address[] memory _pools = palPools;\n        \n        uint lastIndex = (_pools.length).sub(1);\n        for(uint i = 0; i < _pools.length; i++){\n            if(_pools[i] == palPool){\n                //get the address of the PalToken for the Event\n                address _palToken = palTokens[i];\n\n                delete palTokenToPalPool[_palToken];\n\n                //Replace the address to remove with the last one of the array\n                palPools[i] = palPools[lastIndex];\n                palTokens[i] = palTokens[lastIndex];\n\n                //And pop the last item of the array\n                palPools.pop();\n                palTokens.pop();\n\n                emit RemovePalPool(palPool, _palToken);\n             \n                return true;\n            }\n        }\n        return false;\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "me2ee1f10",
			"diff": " 137 |     * @return bool : Success\n 138 |     */ \n 139 | ---    function removePool(address palPool) external override adminOnly returns(bool){\n        //Remove a palToken & palPool from the list\n        require(isPalPool(palPool), Errors.POOL_NOT_LISTED);\n     | +++    \n 140 | \n 141 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "claimLoanRewards",
			"start": 19838,
			"end": 19881,
			"startLine": 523,
			"endLine": 523,
			"original": "_calculateLoanRewards(palPool, loanAddress)",
			"replace": "_calculateLoanRewards(palPool, loanAddress) - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m3a012044",
			"diff": " 521 |         // Check if the PalLoan has some claimable rewards, and if it was not claimed already\n 522 |         require(msg.sender == borrower, Errors.NOT_LOAN_OWNER);\n 523 | ---        uint claimableAmount = _calculateLoanRewards(palPool, loanAddress);\n     | +++        uint claimableAmount = _calculateLoanRewards(palPool, loanAddress) - 1;\n 524 | \n 525 |         require(closed && claimableAmount != 0, Errors.NOT_CLAIMABLE);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12812,
			"end": 12816,
			"startLine": 367,
			"endLine": 367,
			"original": "true",
			"replace": "false",
			"operator": "BVR",
			"status": null,
			"testingTime": null,
			"id": "m2c11e0e4",
			"diff": " 365 |         emit Withdraw(user, palToken, amount);\n 366 | \n 367 | ---        return true;\n     | +++        return false;\n 368 |     }\n 369 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 27954,
			"end": 27955,
			"startLine": 742,
			"endLine": 742,
			"original": "2",
			"replace": "3",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m31694e21",
			"diff": " 740 | \n 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 | ---        require(n < 2**224, \"Number is over 224 bits\");\n     | +++        require(n < 3**224, \"Number is over 224 bits\");\n 743 |         return uint224(n);\n 744 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12733,
			"end": 12737,
			"startLine": 363,
			"endLine": 363,
			"original": "user",
			"replace": "palToken",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m40bc2d2e",
			"diff": " 361 |         totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].sub(amount);\n 362 | \n 363 | ---        token.safeTransfer(user, amount);\n     | +++        token.safeTransfer(palToken, amount);\n 364 | \n 365 |         emit Withdraw(user, palToken, amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "totalSupplyRewardSpeed",
			"start": 24191,
			"end": 24192,
			"startLine": 638,
			"endLine": 638,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m8c65a929",
			"diff": " 636 |         address[] memory _pools = palPools;\n 637 |         uint totalSpeed = 0;\n 638 | ---        for(uint i = 0; i < _pools.length; i++){\n     | +++        for(uint i = 1; i < _pools.length; i++){\n 639 |             totalSpeed = totalSpeed.add(supplySpeeds[_pools[i]]);\n 640 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27347,
			"end": 27386,
			"startLine": 721,
			"endLine": 721,
			"original": "newBorrowRatio != borrowRatios[palPool]",
			"replace": "false",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "mc2b8da57",
			"diff": " 719 |         }\n 720 | \n 721 | ---        if(newBorrowRatio != borrowRatios[palPool]){\n     | +++        if(false){\n 722 |             borrowRatios[palPool] = newBorrowRatio;\n 723 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4915,
			"end": 4919,
			"startLine": 147,
			"endLine": 147,
			"original": " == ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m71b9855b",
			"diff": " 145 |         uint lastIndex = (_pools.length).sub(1);\n 146 |         for(uint i = 0; i < _pools.length; i++){\n 147 | ---            if(_pools[i] == palPool){\n     | +++            if(_pools[i] <= palPool){\n 148 |                 //get the address of the PalToken for the Event\n 149 |                 address _palToken = palTokens[i];\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "_calculateLoanRewards",
			"start": 18889,
			"end": 18980,
			"startLine": 503,
			"endLine": 503,
			"original": "loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool]",
			"replace": "loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool] - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "mc8f89c6c",
			"diff": " 501 | \n 502 |         // Calculate the amount of rewards based on the Pool ratio & the amount of usedFees in the Loan\n 503 | ---        uint poolBorrowRatio = loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool];\n     | +++        uint poolBorrowRatio = loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool] - 1;\n 504 | \n 505 |         return feesUsedAmount.mul(poolBorrowRatio).div(1e18);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27499,
			"end": 27500,
			"startLine": 725,
			"endLine": 725,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m50536f2f",
			"diff": " 723 |         }\n 724 | \n 725 | ---        if(borrowRewardsStartBlock[palPool] == 0 && newBorrowRatio != 0){\n     | +++        if(borrowRewardsStartBlock[palPool] == 1 && newBorrowRatio != 0){\n 726 |             borrowRewardsStartBlock[palPool] = block.number;\n 727 |         }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "estimateClaimable",
			"start": 22105,
			"end": 22141,
			"startLine": 578,
			"endLine": 578,
			"original": "userBalance.mul(indexDiff).div(1e36)",
			"replace": "userBalance.mul(indexDiff).div(1e36) + 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m77f1181e",
			"diff": " 576 |                 uint userBalance = supplierDeposits[_pools[i]][user];\n 577 | \n 578 | ---                uint userAccruedRewards = userBalance.mul(indexDiff).div(1e36);\n     | +++                uint userAccruedRewards = userBalance.mul(indexDiff).div(1e36) + 1;\n 579 | \n 580 |                 // Add the new amount of rewards to the user total claimable balance\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updateRewardToken",
			"start": 25012,
			"end": 25033,
			"startLine": 661,
			"endLine": 661,
			"original": "newRewardTokenAddress",
			"replace": "address(0)",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "m746b66d6",
			"diff": " 659 | \n 660 |     function updateRewardToken(address newRewardTokenAddress) external override adminOnly {\n 661 | ---        rewardTokenAddress = newRewardTokenAddress;\n     | +++        rewardTokenAddress = address(0);\n 662 |     }\n 663 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updateRewardToken",
			"start": 24895,
			"end": 24981,
			"startLine": 660,
			"endLine": 660,
			"original": "function updateRewardToken(address newRewardTokenAddress) external override adminOnly ",
			"replace": "function updateRewardToken(address newRewardTokenAddress) external override  ",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m71d792b2",
			"diff": " 658 |     }\n 659 | \n 660 | ---    function updateRewardToken(address newRewardTokenAddress) external override adminOnly {\n     | +++    function updateRewardToken(address newRewardTokenAddress) external override  {\n 661 |         rewardTokenAddress = newRewardTokenAddress;\n 662 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawToken",
			"start": 25781,
			"end": 25784,
			"startLine": 679,
			"endLine": 679,
			"original": " > ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mffa4e0e0",
			"diff": " 677 |         require(recipient != address(0), Errors.ZERO_ADDRESS);\n 678 |         require(token != address(0), Errors.ZERO_ADDRESS);\n 679 | ---        require(amount > 0, Errors.INVALID_PARAMETERS);\n     | +++        require(amount != 0, Errors.INVALID_PARAMETERS);\n 680 | \n 681 |         //Can't withdraw the reward token (use the correct method\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe32",
			"start": 28102,
			"end": 28105,
			"startLine": 747,
			"endLine": 747,
			"original": " < ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m202b0c99",
			"diff": " 745 | \n 746 |     function safe32(uint n) internal pure returns (uint32) {\n 747 | ---        require(n < 2**32, \"Number is over 32 bits\");\n     | +++        require(n != 2**32, \"Number is over 32 bits\");\n 748 |         return uint32(n);\n 749 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 27951,
			"end": 27954,
			"startLine": 742,
			"endLine": 742,
			"original": " < ",
			"replace": " > ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "mcfd3ace0",
			"diff": " 740 | \n 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 | ---        require(n < 2**224, \"Number is over 224 bits\");\n     | +++        require(n > 2**224, \"Number is over 224 bits\");\n 743 |         return uint224(n);\n 744 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "setInitialPools",
			"start": 2323,
			"end": 2446,
			"startLine": 80,
			"endLine": 80,
			"original": "function setInitialPools(address[] memory _palTokens, address[] memory _palPools) external override adminOnly returns(bool)",
			"replace": "function setInitialPools(address[] memory _palTokens, address[] memory _palPools) external override  returns(bool)",
			"operator": "MOD",
			"status": null,
			"testingTime": null,
			"id": "m167d412b",
			"diff": "  78 |     * @return bool : Success\n  79 |     */ \n  80 | ---    function setInitialPools(address[] memory _palTokens, address[] memory _palPools) external override adminOnly returns(bool){\n     | +++    function setInitialPools(address[] memory _palTokens, address[] memory _palPools) external override  returns(bool){\n  81 |         require(!initialized, Errors.POOL_LIST_ALREADY_SET);\n  82 |         require(_palTokens.length == _palPools.length, Errors.LIST_SIZES_NOT_EQUAL);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "getPalPools",
			"start": 1982,
			"end": 2085,
			"startLine": 70,
			"endLine": 72,
			"original": "function getPalPools() external view override returns(address[] memory){\n        return palPools;\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "m5a594590",
			"diff": "  68 |     * @return address[] : List of PalPool addresses\n  69 |     */\n  70 | ---    function getPalPools() external view override returns(address[] memory){\n        return palPools;\n    }\n     | +++    \n  71 | \n  72 |     /**\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updatePoolRewards",
			"start": 27573,
			"end": 27585,
			"startLine": 726,
			"endLine": 726,
			"original": "block.number",
			"replace": "block.number-1",
			"operator": "GVR",
			"status": null,
			"testingTime": null,
			"id": "mf8c8c441",
			"diff": " 724 | \n 725 |         if(borrowRewardsStartBlock[palPool] == 0 && newBorrowRatio != 0){\n 726 | ---            borrowRewardsStartBlock[palPool] = block.number;\n     | +++            borrowRewardsStartBlock[palPool] = block.number-1;\n 727 |         }\n 728 |         else if(newBorrowRatio == 0){\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12436,
			"end": 12443,
			"startLine": 355,
			"endLine": 355,
			"original": "palPool",
			"replace": "palToken",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mc56efed0",
			"diff": " 353 |         require(amount <= supplierDeposits[palPool][user], Errors.INSUFFICIENT_DEPOSITED);\n 354 | \n 355 | ---        updateSupplyIndex(palPool);\n     | +++        updateSupplyIndex(palToken);\n 356 |         accrueSupplyRewards(palPool, user);\n 357 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawPossible",
			"start": 5764,
			"end": 6060,
			"startLine": 176,
			"endLine": 180,
			"original": "function withdrawPossible(address palPool, uint amount) external view override returns(bool){\n        //Get the underlying balance of the palPool contract to check if the action is possible\n        PalPool _palPool = PalPool(palPool);\n        return(_palPool.underlyingBalance() >= amount);\n    }",
			"replace": "",
			"operator": "ORFD",
			"status": null,
			"testingTime": null,
			"id": "m70b62374",
			"diff": " 174 |     * @return bool : true if possible\n 175 |     */\n 176 | ---    function withdrawPossible(address palPool, uint amount) external view override returns(bool){\n        //Get the underlying balance of the palPool contract to check if the action is possible\n        PalPool _palPool = PalPool(palPool);\n        return(_palPool.underlyingBalance() >= amount);\n    }\n     | +++    \n 177 |     \n 178 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1506,
			"end": 1524,
			"startLine": 49,
			"endLine": 49,
			"original": "_pools[i] == _pool",
			"replace": "true",
			"operator": "CSC",
			"status": null,
			"testingTime": null,
			"id": "m757da8e4",
			"diff": "  47 |         address[] memory _pools = palPools;\n  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 | ---            if(_pools[i] == _pool){\n     | +++            if(true){\n  50 |                 return true;\n  51 |             }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updateSupplyIndex",
			"start": 13465,
			"end": 13481,
			"startLine": 385,
			"endLine": 385,
			"original": "currentBlock.sub",
			"replace": "currentBlock.mul",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m1c20d800",
			"diff": " 383 | \n 384 |         // Calculate the number of blocks since last update\n 385 | ---        uint ellapsedBlocks = currentBlock.sub(uint(state.blockNumber));\n     | +++        uint ellapsedBlocks = currentBlock.mul(uint(state.blockNumber));\n 386 | \n 387 |         // If an update is needed : block ellapsed & non-null speed (rewards to distribute)\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "setPoolsNewController",
			"start": 26452,
			"end": 26453,
			"startLine": 696,
			"endLine": 696,
			"original": "0",
			"replace": "1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "ma7459610",
			"diff": " 694 |     function setPoolsNewController(address newController) external override adminOnly returns(bool){\n 695 |         address[] memory _pools = palPools;\n 696 | ---        for(uint i = 0; i < _pools.length; i++){\n     | +++        for(uint i = 1; i < _pools.length; i++){\n 697 |             IPalPool _palPool = IPalPool(_pools[i]);\n 698 |             _palPool.setNewController(newController);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "safe224",
			"start": 27957,
			"end": 27960,
			"startLine": 742,
			"endLine": 742,
			"original": "224",
			"replace": "225",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "mf14aff81",
			"diff": " 740 | \n 741 |     function safe224(uint n) internal pure returns (uint224) {\n 742 | ---        require(n < 2**224, \"Number is over 224 bits\");\n     | +++        require(n < 2**225, \"Number is over 224 bits\");\n 743 |         return uint224(n);\n 744 |     }\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "updateUserRewards",
			"start": 22581,
			"end": 22598,
			"startLine": 594,
			"endLine": 594,
			"original": "i < _pools.length",
			"replace": "false",
			"operator": "LSC",
			"status": null,
			"testingTime": null,
			"id": "m11fbfe03",
			"diff": " 592 |     function updateUserRewards(address user) public override {\n 593 |         address[] memory _pools = palPools;\n 594 | ---        for(uint i = 0; i < _pools.length; i++){\n     | +++        for(uint i = 0; false; i++){\n 595 |             // Need to update the Supply Index\n 596 |             updateSupplyIndex(_pools[i]);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "accrueBorrowRewards",
			"start": 17183,
			"end": 17213,
			"startLine": 466,
			"endLine": 466,
			"original": "loansBorrowRatios[loanAddress]",
			"replace": "loansBorrowRatios[loanAddress] - 1",
			"operator": "NVR",
			"status": null,
			"testingTime": null,
			"id": "m5d952c7f",
			"diff": " 464 |     function accrueBorrowRewards(address palPool, address loanAddress) internal {\n 465 |         // Get the PalLoan BorrowRatio for rewards\n 466 | ---        uint loanBorrowRatio = loansBorrowRatios[loanAddress];\n     | +++        uint loanBorrowRatio = loansBorrowRatios[loanAddress] - 1;\n 467 | \n 468 |         // Skip if no rewards set for the PalLoan OR if rewards were already claimed for the PalLoan\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "removePool",
			"start": 4867,
			"end": 4870,
			"startLine": 146,
			"endLine": 146,
			"original": " < ",
			"replace": " != ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m2d5a2ade",
			"diff": " 144 |         \n 145 |         uint lastIndex = (_pools.length).sub(1);\n 146 | ---        for(uint i = 0; i < _pools.length; i++){\n     | +++        for(uint i = 0; i != _pools.length; i++){\n 147 |             if(_pools[i] == palPool){\n 148 |                 //get the address of the PalToken for the Event\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "_calculateLoanRewards",
			"start": 18998,
			"end": 19016,
			"startLine": 505,
			"endLine": 505,
			"original": "feesUsedAmount.mul",
			"replace": "feesUsedAmount.mod",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m06514def",
			"diff": " 503 |         uint poolBorrowRatio = loansBorrowRatios[loanAddress] > 0 ? loansBorrowRatios[loanAddress] : borrowRatios[palPool];\n 504 | \n 505 | ---        return feesUsedAmount.mul(poolBorrowRatio).div(1e18);\n     | +++        return feesUsedAmount.mod(poolBorrowRatio).div(1e18);\n 506 |     }\n 507 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdrawVerify",
			"start": 7507,
			"end": 7517,
			"startLine": 222,
			"endLine": 222,
			"original": "msg.sender",
			"replace": "palPool",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mcaddaef7",
			"diff": " 220 |     */\n 221 |     function withdrawVerify(address palPool, address dest, uint amount) external view override returns(bool){\n 222 | ---        require(isPalPool(msg.sender), Errors.CALLER_NOT_POOL);\n     | +++        require(isPalPool(palPool), Errors.CALLER_NOT_POOL);\n 223 | \n 224 |         palPool;\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "deposit",
			"start": 11892,
			"end": 11926,
			"startLine": 338,
			"endLine": 338,
			"original": "totalSupplierDeposits[palPool].add",
			"replace": "totalSupplierDeposits[palPool].mul",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m896bd299",
			"diff": " 336 | \n 337 |         supplierDeposits[palPool][user] = supplierDeposits[palPool][user].add(amount);\n 338 | ---        totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].add(amount);\n     | +++        totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].mul(amount);\n 339 | \n 340 |         token.safeTransferFrom(user, address(this), amount);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "addNewPool",
			"start": 3609,
			"end": 3617,
			"startLine": 110,
			"endLine": 110,
			"original": "_palPool",
			"replace": "_palToken",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mdce4c463",
			"diff": " 108 |     function addNewPool(address _palToken, address _palPool) external override adminOnly returns(bool){\n 109 |         //Add a new address to the palToken & palPool list\n 110 | ---        require(!isPalPool(_palPool), Errors.POOL_ALREADY_LISTED);\n     | +++        require(!isPalPool(_palToken), Errors.POOL_ALREADY_LISTED);\n 111 | \n 112 |         palTokens.push(_palToken);\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "withdraw",
			"start": 12575,
			"end": 12610,
			"startLine": 360,
			"endLine": 360,
			"original": "supplierDeposits[palPool][user].sub",
			"replace": "supplierDeposits[palPool][user].add",
			"operator": "MCR",
			"status": null,
			"testingTime": null,
			"id": "m7cc8fc0c",
			"diff": " 358 |         IERC20 token = IERC20(palToken);\n 359 | \n 360 | ---        supplierDeposits[palPool][user] = supplierDeposits[palPool][user].sub(amount);\n     | +++        supplierDeposits[palPool][user] = supplierDeposits[palPool][user].add(amount);\n 361 |         totalSupplierDeposits[palPool] = totalSupplierDeposits[palPool].sub(amount);\n 362 | \n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "addNewPool",
			"start": 3757,
			"end": 3765,
			"startLine": 114,
			"endLine": 114,
			"original": "_palPool",
			"replace": "_palToken",
			"operator": "AVR",
			"status": null,
			"testingTime": null,
			"id": "mee18b839",
			"diff": " 112 |         palTokens.push(_palToken);\n 113 |         palPools.push(_palPool);\n 114 | ---        palTokenToPalPool[_palToken] = _palPool;\n     | +++        palTokenToPalPool[_palToken] = _palToken;\n 115 | \n 116 |         //Update the Reward State for the new Pool\n"
		},
		{
			"file": "/home/morena/GitHub/CatanaExp/Catana/contracts/PaladinController.sol",
			"functionName": "isPalPool",
			"start": 1515,
			"end": 1519,
			"startLine": 49,
			"endLine": 49,
			"original": " == ",
			"replace": " <= ",
			"operator": "BOR",
			"status": null,
			"testingTime": null,
			"id": "m4812b391",
			"diff": "  47 |         address[] memory _pools = palPools;\n  48 |         for(uint i = 0; i < _pools.length; i++){\n  49 | ---            if(_pools[i] == _pool){\n     | +++            if(_pools[i] <= _pool){\n  50 |                 return true;\n  51 |             }\n"
		}
	]
}